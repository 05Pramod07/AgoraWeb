{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pramod\\\\ProjectShareLook\\\\Agora\\\\OpenAgoraWeb-React\\\\src\\\\components\\\\AgoraVideoCall\\\\index.jsx\";\nimport React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\nimport \"./canvas.css\";\nimport \"../../assets/fonts/css/icons.css\";\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/13\"],\n  \"5\": [\"span 3/span 4/13/9\", \"span 3/span 4/13/13\", \"span 3/span 4/13/17\", \"span 3/span 4/13/21\", \"span 9/span 16/10/21\"],\n  \"6\": [\"span 3/span 4/13/7\", \"span 3/span 4/13/11\", \"span 3/span 4/13/15\", \"span 3/span 4/13/19\", \"span 3/span 4/13/23\", \"span 9/span 16/10/21\"],\n  \"7\": [\"span 3/span 4/13/5\", \"span 3/span 4/13/9\", \"span 3/span 4/13/13\", \"span 3/span 4/13/17\", \"span 3/span 4/13/21\", \"span 3/span 4/13/25\", \"span 9/span 16/10/21\"]\n};\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.streamInit = (uid, attendeeMode, videoProfile, config) => {\n      let defaultConfig = {\n        streamID: uid,\n        audio: true,\n        video: true,\n        screen: false\n      };\n\n      switch (attendeeMode) {\n        case \"audio-only\":\n          defaultConfig.video = false;\n          break;\n\n        case \"audience\":\n          defaultConfig.video = false;\n          defaultConfig.audio = false;\n          break;\n\n        default:\n        case \"video\":\n          break;\n      }\n\n      let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n      stream.setVideoProfile(videoProfile);\n      return stream;\n    };\n\n    this.subscribeStreamEvents = () => {\n      let rt = this;\n      rt.client.on(\"stream-added\", function (evt) {\n        let stream = evt.stream;\n        console.log(\"New stream added: \" + stream.getId());\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        console.log(\"Subscribe \", stream);\n        rt.client.subscribe(stream, function (err) {\n          console.log(\"Subscribe stream failed\", err);\n        });\n      });\n      rt.client.on(\"peer-leave\", function (evt) {\n        console.log(\"Peer has left: \" + evt.uid);\n        console.log(new Date().toLocaleTimeString());\n        console.log(evt);\n        rt.removeStream(evt.uid);\n      });\n      rt.client.on(\"stream-subscribed\", function (evt) {\n        let stream = evt.stream;\n        console.log(\"Got stream-subscribed event\");\n        console.log(new Date().toLocaleTimeString());\n        console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n        console.log(evt);\n        rt.addStream(stream);\n      });\n      rt.client.on(\"stream-removed\", function (evt) {\n        let stream = evt.stream;\n        console.log(\"Stream removed: \" + stream.getId());\n        console.log(new Date().toLocaleTimeString());\n        console.log(evt);\n        rt.removeStream(stream.getId());\n      });\n    };\n\n    this.removeStream = uid => {\n      this.state.streamList.map((item, index) => {\n        if (item.getId() === uid) {\n          item.close();\n          let element = document.querySelector(\"#ag-item-\" + uid);\n\n          if (element) {\n            element.parentNode.removeChild(element);\n          }\n\n          let tempList = [...this.state.streamList];\n          tempList.splice(index, 1);\n          this.setState({\n            streamList: tempList\n          });\n        }\n      });\n    };\n\n    this.addStream = (stream, push = false) => {\n      let repeatition = this.state.streamList.some(item => {\n        return item.getId() === stream.getId();\n      });\n\n      if (repeatition) {\n        return;\n      }\n\n      if (push) {\n        this.setState({\n          streamList: this.state.streamList.concat([stream])\n        });\n      } else {\n        this.setState({\n          streamList: [stream].concat(this.state.streamList)\n        });\n      }\n    };\n\n    this.handleCamera = e => {\n      e.currentTarget.classList.toggle(\"off\");\n      this.localStream.isVideoOn() ? this.localStream.disableVideo() : this.localStream.enableVideo();\n    };\n\n    this.handleMic = e => {\n      e.currentTarget.classList.toggle(\"off\");\n      this.localStream.isAudioOn() ? this.localStream.disableAudio() : this.localStream.enableAudio();\n    };\n\n    this.switchDisplay = e => {\n      if (e.currentTarget.classList.contains(\"disabled\") || this.state.streamList.length <= 1) {\n        return;\n      }\n\n      if (this.state.displayMode === \"pip\") {\n        this.setState({\n          displayMode: \"tile\"\n        });\n      } else if (this.state.displayMode === \"tile\") {\n        this.setState({\n          displayMode: \"pip\"\n        });\n      } else if (this.state.displayMode === \"share\") {// do nothing or alert, tbd\n      } else {\n        console.error(\"Display Mode can only be tile/pip/share\");\n      }\n    };\n\n    this.hideRemote = e => {\n      if (e.currentTarget.classList.contains(\"disabled\") || this.state.streamList.length <= 1) {\n        return;\n      }\n\n      let list;\n      let id = this.state.streamList[this.state.streamList.length - 1].getId();\n      list = Array.from(document.querySelectorAll(`.ag-item:not(#ag-item-${id})`));\n      list.map(item => {\n        if (item.style.display !== \"none\") {\n          item.style.display = \"none\";\n        } else {\n          item.style.display = \"block\";\n        }\n      });\n    };\n\n    this.handleExit = e => {\n      if (e.currentTarget.classList.contains(\"disabled\")) {\n        return;\n      }\n\n      try {\n        this.client && this.client.unpublish(this.localStream);\n        this.localStream && this.localStream.close();\n\n        if (this.state.stateSharing) {\n          this.shareClient && this.shareClient.unpublish(this.shareStream);\n          this.shareStream && this.shareStream.close();\n        }\n\n        this.client && this.client.leave(() => {\n          console.log(\"Client succeed to leave.\");\n        }, () => {\n          console.log(\"Client failed to leave.\");\n        });\n      } finally {\n        this.setState({\n          readyState: false\n        });\n        this.client = null;\n        this.localStream = null; // redirect to index\n\n        window.location.hash = \"\";\n      }\n    };\n\n    this.sharingScreen = e => {\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n        this.state.stateSharing = false;\n      } else {\n        this.state.stateSharing = true;\n        let $ = this.props; // init AgoraRTC local client\n\n        this.shareClient = AgoraRTC.createClient({\n          mode: $.transcode\n        });\n        this.shareClient.init($.appId, () => {\n          console.log(\"AgoraRTC client initialized\");\n          this.subscribeStreamEvents();\n          this.shareClient.join($.appId, $.channel, $.uid, uid => {\n            this.state.uid = uid;\n            console.log(\"User \" + uid + \" join channel successfully\");\n            console.log(\"At \" + new Date().toLocaleTimeString()); // create local stream\n            // It is not recommended to setState in function addStream\n\n            this.shareStream = this.streamInitSharing(uid, $.attendeeMode, $.videoProfile);\n            this.shareStream.init(() => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, err => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n\n              this.setState({\n                readyState: true\n              });\n            }, err => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({\n                readyState: true\n              });\n            });\n          });\n        });\n      }\n    };\n\n    this.streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n      let defaultConfig = {\n        streamID: uid,\n        audio: true,\n        video: false,\n        screen: true\n      };\n\n      switch (attendeeMode) {\n        case \"audio-only\":\n          defaultConfig.video = false;\n          break;\n\n        case \"audience\":\n          defaultConfig.video = false;\n          defaultConfig.audio = false;\n          break;\n\n        default:\n        case \"video\":\n          break;\n      }\n\n      let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n      stream.setVideoProfile(videoProfile);\n      return stream;\n    };\n\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false\n    };\n  }\n\n  componentWillMount() {\n    let $ = this.props; // init AgoraRTC local client\n\n    this.client = AgoraRTC.createClient({\n      mode: $.transcode\n    });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n      this.client.join($.appId, $.channel, $.uid, uid => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString()); // create local stream\n        // It is not recommended to setState in function addStream\n\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(() => {\n          if ($.attendeeMode !== \"audience\") {\n            this.addStream(this.localStream, true);\n            this.client.publish(this.localStream, err => {\n              console.log(\"Publish local stream error: \" + err);\n            });\n          }\n\n          this.setState({\n            readyState: true\n          });\n        }, err => {\n          console.log(\"getUserMedia failed\", err);\n          this.setState({\n            readyState: true\n          });\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n  } // componentWillUnmount () {\n  //     // remove listener\n  //     let canvas = document.querySelector('#ag-canvas')\n  //     canvas.removeEventListener('mousemove')\n  // }\n\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\"); // pip mode (can only use when less than 4 people in channel)\n\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n\n      if (no > 4) {\n        this.setState({\n          displayMode: \"tile\"\n        });\n        return;\n      }\n\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\"style\", `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`);\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    } // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    } // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {}\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n\n    this.client && this.client.leave(() => {\n      console.log(\"Client succeed to leave.\");\n    }, () => {\n      console.log(\"Client failed to leave.\");\n    });\n  }\n\n  render() {\n    const style = {\n      display: \"grid\",\n      gridGap: \"10px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\"\n    };\n    const videoControlBtn = this.props.attendeeMode === \"video\" ? /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleCamera,\n      className: \"ag-btn videoControlBtn\",\n      title: \"Enable/Disable Video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-camera\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-camera-off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }\n    })) : \"\";\n    const audioControlBtn = this.props.attendeeMode !== \"audience\" ? /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleMic,\n      className: \"ag-btn audioControlBtn\",\n      title: \"Enable/Disable Audio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-mic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-mic-off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }\n    })) : \"\";\n    const switchDisplayBtn = /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.switchDisplay,\n      className: this.state.streamList.length > 4 ? \"ag-btn displayModeBtn disabled\" : \"ag-btn displayModeBtn\",\n      title: \"Switch Display Mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-switch-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }\n    }));\n    const hideRemoteBtn = /*#__PURE__*/React.createElement(\"span\", {\n      className: this.state.streamList.length > 4 || this.state.displayMode !== \"pip\" ? \"ag-btn disableRemoteBtn disabled\" : \"ag-btn disableRemoteBtn\",\n      onClick: this.hideRemote,\n      title: \"Hide Remote Stream\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-remove-pip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }\n    }));\n    const exitBtn = /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleExit,\n      className: this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\",\n      title: \"Exit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-leave\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ag-canvas\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ag-btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }\n    }, exitBtn, videoControlBtn, audioControlBtn, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.sharingScreen,\n      className: \"ag-btn shareScreenBtn\",\n      title: \"Share/unShare Screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"ag-icon ag-icon-screen-share\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 15\n      }\n    })), switchDisplayBtn, hideRemoteBtn));\n  }\n\n}\n\nexport default AgoraCanvas;","map":{"version":3,"sources":["C:/Pramod/ProjectShareLook/Agora/OpenAgoraWeb-React/src/components/AgoraVideoCall/index.jsx"],"names":["React","merge","AgoraRTC","tile_canvas","AgoraCanvas","Component","constructor","props","streamInit","uid","attendeeMode","videoProfile","config","defaultConfig","streamID","audio","video","screen","stream","createStream","setVideoProfile","subscribeStreamEvents","rt","client","on","evt","console","log","getId","Date","toLocaleTimeString","subscribe","err","removeStream","addStream","state","streamList","map","item","index","close","element","document","querySelector","parentNode","removeChild","tempList","splice","setState","push","repeatition","some","concat","handleCamera","e","currentTarget","classList","toggle","localStream","isVideoOn","disableVideo","enableVideo","handleMic","isAudioOn","disableAudio","enableAudio","switchDisplay","contains","length","displayMode","error","hideRemote","list","id","Array","from","querySelectorAll","style","display","handleExit","unpublish","stateSharing","shareClient","shareStream","leave","readyState","window","location","hash","sharingScreen","$","createClient","mode","transcode","init","appId","join","channel","streamInitSharing","publish","componentWillMount","componentDidMount","canvas","btnGroup","addEventListener","global","_toolbarToggle","clearTimeout","add","setTimeout","remove","componentDidUpdate","no","dom","createElement","setAttribute","appendChild","play","player","resize","componentWillUnmount","render","gridGap","alignItems","justifyItems","gridTemplateRows","gridTemplateColumns","videoControlBtn","audioControlBtn","switchDisplayBtn","hideRemoteBtn","exitBtn"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\n\r\nimport \"./canvas.css\";\r\nimport \"../../assets/fonts/css/icons.css\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      console.log(\"AgoraRTC client initialized\");\r\n      this.subscribeStreamEvents();\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        console.log(\"At \" + new Date().toLocaleTimeString());\r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n                console.log(\"Publish local stream error: \" + err);\r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n            console.log(\"getUserMedia failed\", err);\r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  // componentWillUnmount () {\r\n  //     // remove listener\r\n  //     let canvas = document.querySelector('#ag-canvas')\r\n  //     canvas.removeEventListener('mousemove')\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          console.log(\"Client succeed to leave.\");\r\n        },\r\n        () => {\r\n          console.log(\"Client failed to leave.\");\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"New stream added: \" + stream.getId());\r\n      console.log(\"At \" + new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe \", stream);\r\n      rt.client.subscribe(stream, function (err) {\r\n        console.log(\"Subscribe stream failed\", err);\r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n      console.log(\"Peer has left: \" + evt.uid);\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Got stream-subscribed event\");\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\r\n      console.log(evt);\r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Stream removed: \" + stream.getId());\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  handleExit = (e) => {\r\n    if (e.currentTarget.classList.contains(\"disabled\")) {\r\n      return;\r\n    }\r\n    try {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      if (this.state.stateSharing) {\r\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n        this.shareStream && this.shareStream.close();\r\n      }\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n            console.log(\"Client succeed to leave.\");\r\n          },\r\n          () => {\r\n            console.log(\"Client failed to leave.\");\r\n          }\r\n        );\r\n    } finally {\r\n      this.setState({ readyState: false });\r\n      this.client = null;\r\n      this.localStream = null;\r\n      // redirect to index\r\n      window.location.hash = \"\";\r\n    }\r\n  };\r\n\r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n      this.shareClient.init($.appId, () => {\r\n        console.log(\"AgoraRTC client initialized\");\r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n          console.log(\"User \" + uid + \" join channel successfully\");\r\n          console.log(\"At \" + new Date().toLocaleTimeString());\r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                  console.log(\"Publish local stream error: \" + err);\r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n              console.log(\"getUserMedia failed\", err);\r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  render() {\r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"10px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n    const exitBtn = (\r\n      <span\r\n        onClick={this.handleExit}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-leave\"></i>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <div id=\"ag-canvas\" style={style}>\r\n        <div className=\"ag-btn-group\">\r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;\r\n"]},"metadata":{},"sourceType":"module"}